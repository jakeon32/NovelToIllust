import { GoogleGenAI, Modality } from "@google/genai";

const ai = new GoogleGenAI({ apiKey: process.env.GEMINI_API_KEY || '' });
const illustrationModel = "gemini-2.5-flash-image";

export default async function handler(req: any, res: any) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  const { originalImage, editPrompt } = req.body;

  if (!originalImage || !editPrompt) {
    return res.status(400).json({ error: 'Original image and edit prompt are required' });
  }

  try {
    const parts: any[] = [
      {
        inlineData: {
          mimeType: originalImage.mimeType,
          data: originalImage.base64,
        },
      },
      {
        text: `Edit the image based on this instruction: "${editPrompt}". Only change what is requested.`,
      },
    ];

    const response = await ai.models.generateContent({
      model: illustrationModel,
      contents: { parts },
      config: {
        responseModalities: [Modality.IMAGE],
      },
    });

    for (const part of response.candidates[0].content.parts) {
      if (part.inlineData) {
        const base64ImageBytes: string = part.inlineData.data;
        return res.status(200).json({
          image: `data:${part.inlineData.mimeType};base64,${base64ImageBytes}`
        });
      }
    }

    throw new Error("No edited image was generated by the API.");

  } catch (error: any) {
    console.error("Error editing illustration:", error);
    return res.status(500).json({ error: error.message || 'Failed to edit illustration' });
  }
}
