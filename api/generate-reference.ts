import { GoogleGenAI, Modality } from "@google/genai";

const ai = new GoogleGenAI({ apiKey: process.env.GEMINI_API_KEY || '' });
const referenceImageModel = 'gemini-2.5-flash-image';

export default async function handler(req: any, res: any) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  const { prompt } = req.body;

  if (!prompt) {
    return res.status(400).json({ error: 'Prompt is required' });
  }

  try {
    const response = await ai.models.generateContent({
      model: referenceImageModel,
      contents: { parts: [{ text: prompt }] },
      config: {
        responseModalities: [Modality.IMAGE],
      },
    });

    for (const part of response.candidates[0].content.parts) {
      if (part.inlineData) {
        const base64ImageBytes: string = part.inlineData.data;
        const mimeType = part.inlineData.mimeType;
        return res.status(200).json({
          image: {
            base64: base64ImageBytes,
            mimeType: mimeType,
            name: `generated-${Date.now()}.${mimeType.split('/')[1] || 'png'}`
          }
        });
      }
    }

    throw new Error("No image was generated by the AI for the reference prompt.");

  } catch (error: any) {
    console.error("Error generating reference image:", error);
    return res.status(500).json({ error: error.message || 'Failed to generate reference image' });
  }
}
